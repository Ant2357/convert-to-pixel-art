{"version":3,"file":"js/app.ec253924.js","mappings":"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","sources":["webpack://convert-to-pixel-art/./src/App.vue","webpack://convert-to-pixel-art/./src/App.vue?7ccd","webpack://convert-to-pixel-art/./src/main.js","webpack://convert-to-pixel-art/./src/pixelit.js","webpack://convert-to-pixel-art/webpack/bootstrap","webpack://convert-to-pixel-art/webpack/runtime/chunk loaded","webpack://convert-to-pixel-art/webpack/runtime/compat get default export","webpack://convert-to-pixel-art/webpack/runtime/define property getters","webpack://convert-to-pixel-art/webpack/runtime/global","webpack://convert-to-pixel-art/webpack/runtime/hasOwnProperty shorthand","webpack://convert-to-pixel-art/webpack/runtime/jsonp chunk loading","webpack://convert-to-pixel-art/webpack/startup"],"sourcesContent":["<template>\n  <div>\n    <label v-show=\"!appState.uploadedImages[0]\">\n      画像を選択\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        @change=\"onFileChange\"\n        @click=\"e => { e.target.value = '' }\"\n      />\n\n    </label>\n    <label v-show=\"!appState.uploadedImages[0]\">\n      画像を選択(フォルダ参照版)\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        webkitdirectory\n        multiple\n        @change=\"onFileChange($event, true)\"\n        @click=\"e => { e.target.value = '' }\"\n      />\n    </label>\n\n    <div v-for=\"(uploadedImages, index) in appState.uploadedImages\" :key=\"uploadedImages\">\n      <img\n        class=\"pixelitimg\"\n        v-show=\"!appState.isConvert\"\n        :src=\"uploadedImages\"\n      />\n\n      <canvas\n        class=\"pixelitcanvas\"\n      ></canvas>\n\n      <p>{{ appState.imgNames[index] }}</p>\n    </div>\n\n    <div v-show=\"appState.uploadedImages[0]\">\n      <button @click=\"convertToPixelArt\">convert</button>\n      <button @click=\"remove\">close</button>\n    </div>\n\n  </div>\n</template>\n\n<script>\nimport { defineComponent, reactive } from 'vue';\nimport pixelit from '@/pixelit';\n\nexport default defineComponent({\n  name: 'App',\n  setup() {\n    // HTML上のClassName(canvas要素)\n    const CANVAS_CLASS_NAME = \"pixelitcanvas\";\n    // HTML上のClassName(img要素)\n    const IMG_CLASS_NAME = \"pixelitimg\";\n\n    const appState = reactive({\n      uploadedImages: [],\n      imgNames: [],\n      isConvert: false\n    });\n\n    const onFileChange = (e, isMultiple = false) => {\n      const files = e.target.files || e.dataTransfer.files;\n\n      // 単独ファイルの変換\n      if (!isMultiple) {\n        createImage(files[0], 0);\n        appState.imgNames = [files[0].name];\n        return;\n      }\n\n      // 複数ファイルの変換\n      const arrFiles = Object.entries(files).map(v =>{\n        const [,...res] = v;\n        return res;\n      });\n      arrFiles.forEach((file, index) => {\n        createImage(file[0], index);\n      });\n      appState.imgNames = arrFiles.map(file => file[0].name);\n    };\n\n    const createImage = (file, index) => {\n      const reader = new FileReader();\n      reader.onload = e => {\n        appState.uploadedImages[index] = e.target.result;\n      };\n      reader.readAsDataURL(file);\n    };\n\n    const remove = () => {\n      // canvasの初期化(Vueで生DOMを触りたくない)(心からの叫び)\n      const canvasDoms = document.querySelectorAll(`.${CANVAS_CLASS_NAME}`);\n      canvasDoms.forEach(canvasDom => {\n        const ctx = canvasDom.getContext(\"2d\");\n        ctx.clearRect(0, 0, canvasDom.width, canvasDom.height);\n        canvasDom.width = 0;\n        canvasDom.height = 0;\n      });\n\n      appState.uploadedImages = [];\n      appState.imgNames = [];\n      appState.isConvert = false;\n    };\n\n    const convertToPixelArt = () => {\n      const canvasDoms = document.querySelectorAll(`.${CANVAS_CLASS_NAME}`);\n      const imgDoms = document.querySelectorAll(`.${IMG_CLASS_NAME}`);\n\n      imgDoms.forEach((imgDom, index) => {\n        const px = new pixelit.pixelit({\n          to: canvasDoms[index],\n          from: imgDoms[index], \n          scale: 18\n        });\n        px.draw().pixelate().convertPalette();\n\n        // ライブラリに生DOMをいじられるので修正\n        imgDoms[index].style = \"\";\n      })\n\n      appState.isConvert = true;\n    };\n\n    return {\n      appState,\n      onFileChange,\n      createImage,\n      remove,\n      convertToPixelArt\n    }\n  }\n});\n</script>\n","import { render } from \"./App.vue?vue&type=template&id=fa25f18e\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\WebAnt\\\\convert-to-pixel-art\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport App from './App.vue'\n\ncreateApp(App).mount('#app')\n","/**\r\n * pixelit - convert an image to Pixel Art, with/out grayscale and based on a color palette.\r\n * @author José Moreira @ <https://github.com/giventofly/pixelit>\r\n **/\r\n\r\nclass pixelit {\r\n  constructor(config = {}) {\r\n    //target for canvas\r\n    this.drawto = config.to || document.getElementById(\"pixelitcanvas\");\r\n    //origin of uploaded image/src img\r\n    this.drawfrom = config.from || document.getElementById(\"pixelitimg\");\r\n    //hide image element\r\n    this.hideFromImg();\r\n    //range between 0 to 100\r\n    this.scale =\r\n      config.scale && config.scale > 0 && config.scale <= 50\r\n        ? config.scale * 0.01\r\n        : 8 * 0.01;\r\n    this.palette = config.palette || [\r\n      [140, 143, 174],\r\n      [88, 69, 99],\r\n      [62, 33, 55],\r\n      [154, 99, 72],\r\n      [215, 155, 125],\r\n      [245, 237, 186],\r\n      [192, 199, 65],\r\n      [100, 125, 52],\r\n      [228, 148, 58],\r\n      [157, 48, 59],\r\n      [210, 100, 113],\r\n      [112, 55, 127],\r\n      [126, 196, 193],\r\n      [52, 133, 157],\r\n      [23, 67, 75],\r\n      [31, 14, 28],\r\n    ];\r\n    this.maxHeight = config.maxHeight;\r\n    this.maxWidth = config.maxWidth;\r\n    this.ctx = this.drawto.getContext(\"2d\");\r\n    //save latest converted colors\r\n    this.endColorStats = {};\r\n  }\r\n\r\n  /** hide from image */\r\n  hideFromImg() {\r\n    this.drawfrom.style.visibility = \"hidden\";\r\n    this.drawfrom.style.position = \"fixed\";\r\n    this.drawfrom.style.top = 0;\r\n    this.drawfrom.style.left = 0;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @param {string} src Change the src from the image element\r\n   */\r\n  setFromImgSource(src) {\r\n    this.drawfrom.src = src;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {elem} elem set element to read image from\r\n   */\r\n  setDrawFrom(elem) {\r\n    this.drawfrom = elem;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {elem} elem set element canvas to write the image\r\n   */\r\n  setDrawTo(elem) {\r\n    this.drawto = elem;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {array} arr Array of rgb colors: [[int,int,int]]\r\n   */\r\n  setPalette(arr) {\r\n    this.palette = arr;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {int} width set canvas image maxWidth\r\n   */\r\n  setMaxWidth(width) {\r\n    this.maxWidth = width;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {int} Height set canvas image maxHeight\r\n   */\r\n  setMaxHeight(height) {\r\n    this.maxHeight = height;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {int} scale set pixelate scale [0...50]\r\n   */\r\n  setScale(scale) {\r\n    this.scale = scale > 0 && scale <= 50 ? scale * 0.01 : 8 * 0.01;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * \r\n    @return {arr} of current palette\r\n   */\r\n  getPalette() {\r\n    return this.palette;\r\n  }\r\n\r\n  /**\r\n   * color similarity between colors, lower is better\r\n   * @param {array} rgbColor array of ints to make a rgb color: [int,int,int]\r\n   * @param {array} compareColor array of ints to make a rgb color: [int,int,int]\r\n   * @returns {number} limits [0-441.6729559300637]\r\n   */\r\n\r\n  colorSim(rgbColor, compareColor) {\r\n    let i;\r\n    let max;\r\n    let d = 0;\r\n    for (i = 0, max = rgbColor.length; i < max; i++) {\r\n      d += (rgbColor[i] - compareColor[i]) * (rgbColor[i] - compareColor[i]);\r\n    }\r\n    return Math.sqrt(d);\r\n  }\r\n\r\n  /**\r\n   * given actualColor, check from the paletteColors the most aproximated color\r\n   * @param {array} actualColor rgb color to compare [int,int,int]\r\n   * @returns {array} aproximated rgb color\r\n   */\r\n  similarColor(actualColor) {\r\n    let selectedColor = [];\r\n    let currentSim = this.colorSim(actualColor, this.palette[0]);\r\n    let nextColor;\r\n    this.palette.forEach((color) => {\r\n      nextColor = this.colorSim(actualColor, color);\r\n      if (nextColor <= currentSim) {\r\n        selectedColor = color;\r\n        currentSim = nextColor;\r\n      }\r\n    });\r\n    return selectedColor;\r\n  }\r\n  //TODO someday\r\n  /**\r\n   * After image is pixelated returns\r\n   * @returns {object} { color : quantity }\r\n   */\r\n  /*\r\n    getColorStats(){\r\n      return this.endColorStats;\r\n    }\r\n    */\r\n  /**\r\n   * Sets image last color stats\r\n   */\r\n  /*\r\n    _setColorStats(stats={}){\r\n      this.endColorStats = stats;\r\n    }\r\n    */\r\n  /**\r\n   * Auxiliar function to count colors\r\n   * @param {string,object} color, current object count\r\n   * @returns {object} {color : quantity}\r\n   */\r\n  /*\r\n  _countColor(color=null,colorCount={}){\r\n      if(!color){ return colorCount; }\r\n      if(colorCount[color]){\r\n        colorCount[color] += parseInt(colorCount[color]) + 1;\r\n      }\r\n      else {\r\n        colorCount[color] = 1;\r\n      }\r\n      return colorCount;\r\n  }\r\n  */\r\n  //TODO end\r\n\r\n  /**\r\n   * pixelate based on @author rogeriopvl <https://github.com/rogeriopvl/8bit>\r\n   * Draws a pixelated version of an image in a given canvas\r\n   */\r\n  pixelate() {\r\n    this.drawto.width = this.drawfrom.naturalWidth;\r\n    this.drawto.height = this.drawfrom.naturalHeight;\r\n    let scaledW = this.drawto.width * this.scale;\r\n    let scaledH = this.drawto.height * this.scale;\r\n\r\n    //make temporary canvas to make new scaled copy\r\n    const tempCanvas = document.createElement(\"canvas\");\r\n\r\n    // Set temp canvas width/height & hide (fixes higher scaled cutting off image bottom)\r\n    tempCanvas.width = this.drawto.width;\r\n    tempCanvas.height = this.drawto.height;\r\n    tempCanvas.style.visibility = \"hidden\";\r\n    tempCanvas.style.position = \"fixed\";\r\n    tempCanvas.style.top = \"0\";\r\n    tempCanvas.style.left = \"0\";\r\n\r\n    //corner case of bigger images, increase the temporary canvas size to fit everything\r\n    if (this.drawto.width > 900 || this.drawto.height > 900) {\r\n      //fix sclae to pixelate bigger images\r\n      this.scale *= 0.5;\r\n      scaledW = this.drawto.width * this.scale;\r\n      scaledH = this.drawto.height * this.scale;\r\n      //make it big enough to fit\r\n      tempCanvas.width = Math.max(scaledW, scaledH) + 50;\r\n      tempCanvas.height = Math.max(scaledW, scaledH) + 50;\r\n    }\r\n    // get the context\r\n    const tempContext = tempCanvas.getContext(\"2d\");\r\n    // draw the image into the canvas\r\n    tempContext.drawImage(this.drawfrom, 0, 0, scaledW, scaledH);\r\n    document.body.appendChild(tempCanvas);\r\n    //configs to pixelate\r\n    this.ctx.mozImageSmoothingEnabled = false;\r\n    this.ctx.webkitImageSmoothingEnabled = false;\r\n    this.ctx.imageSmoothingEnabled = false;\r\n\r\n    //calculations to remove extra border\r\n    let finalWidth = this.drawfrom.naturalWidth;\r\n    if (this.drawfrom.naturalWidth > 300) {\r\n      finalWidth +=\r\n        this.drawfrom.naturalWidth > this.drawfrom.naturalHeight\r\n          ? parseInt(\r\n              this.drawfrom.naturalWidth / (this.drawfrom.naturalWidth * this.scale)\r\n            ) / 1.5\r\n          : parseInt(\r\n              this.drawfrom.naturalWidth / (this.drawfrom.naturalWidth * this.scale)\r\n            );\r\n    }\r\n    let finalHeight = this.drawfrom.naturalHeight;\r\n    if (this.drawfrom.naturalHeight > 300) {\r\n      finalHeight +=\r\n        this.drawfrom.naturalHeight > this.drawfrom.naturalWidth\r\n          ? parseInt(\r\n              this.drawfrom.naturalHeight / (this.drawfrom.naturalHeight * this.scale)\r\n            ) / 1.5\r\n          : parseInt(\r\n              this.drawfrom.naturalHeight / (this.drawfrom.naturalHeight * this.scale)\r\n            );\r\n    }\r\n    //draw to final canvas\r\n    //https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/drawImage\r\n    this.ctx.drawImage(\r\n      tempCanvas,\r\n      0,\r\n      0,\r\n      scaledW,\r\n      scaledH,\r\n      0,\r\n      0,\r\n      finalWidth, //+ Math.max(24, 25 * this.scale),\r\n      finalHeight //+ Math.max(24, 25 * this.scale)\r\n    );\r\n    //remove temp element\r\n    tempCanvas.remove();\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Converts image to grayscale\r\n   */\r\n  convertGrayscale() {\r\n    const w = this.drawto.width;\r\n    const h = this.drawto.height;\r\n    var imgPixels = this.ctx.getImageData(0, 0, w, h);\r\n    for (var y = 0; y < imgPixels.height; y++) {\r\n      for (var x = 0; x < imgPixels.width; x++) {\r\n        var i = y * 4 * imgPixels.width + x * 4;\r\n        var avg = (imgPixels.data[i] + imgPixels.data[i + 1] + imgPixels.data[i + 2]) / 3;\r\n        imgPixels.data[i] = avg;\r\n        imgPixels.data[i + 1] = avg;\r\n        imgPixels.data[i + 2] = avg;\r\n      }\r\n    }\r\n    this.ctx.putImageData(imgPixels, 0, 0, 0, 0, imgPixels.width, imgPixels.height);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * converts image to palette using the defined palette or default palette\r\n   */\r\n  convertPalette() {\r\n    const w = this.drawto.width;\r\n    const h = this.drawto.height;\r\n    var imgPixels = this.ctx.getImageData(0, 0, w, h);\r\n    for (var y = 0; y < imgPixels.height; y++) {\r\n      for (var x = 0; x < imgPixels.width; x++) {\r\n        var i = y * 4 * imgPixels.width + x * 4;\r\n        //var avg = (imgPixels.data[i] + imgPixels.data[i + 1] + imgPixels.data[i + 2]) / 3;\r\n        const finalcolor = this.similarColor([\r\n          imgPixels.data[i],\r\n          imgPixels.data[i + 1],\r\n          imgPixels.data[i + 2],\r\n        ]);\r\n        imgPixels.data[i] = finalcolor[0];\r\n        imgPixels.data[i + 1] = finalcolor[1];\r\n        imgPixels.data[i + 2] = finalcolor[2];\r\n      }\r\n    }\r\n    this.ctx.putImageData(imgPixels, 0, 0, 0, 0, imgPixels.width, imgPixels.height);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Resizes image proportionally according to a max width or max height\r\n   * height takes precedence if definied\r\n   */\r\n  resizeImage() {\r\n    //var ctx = canvas.getContext(\"2d\")\r\n    const canvasCopy = document.createElement(\"canvas\");\r\n    const copyContext = canvasCopy.getContext(\"2d\");\r\n    let ratio = 1.0;\r\n\r\n    //if none defined skip\r\n    if (!this.maxWidth && !this.maxHeight) {\r\n      return 0;\r\n    }\r\n\r\n    if (this.maxWidth && this.drawto.width > this.maxWidth) {\r\n      ratio = this.maxWidth / this.drawto.width;\r\n    }\r\n    //max height overrides max width\r\n    if (this.maxHeight && this.drawto.height > this.maxHeight) {\r\n      ratio = this.maxHeight / this.drawto.height;\r\n    }\r\n\r\n    canvasCopy.width = this.drawto.width;\r\n    canvasCopy.height = this.drawto.height;\r\n    copyContext.drawImage(this.drawto, 0, 0);\r\n\r\n    this.drawto.width = this.drawto.width * ratio;\r\n    this.drawto.height = this.drawto.height * ratio;\r\n    this.ctx.drawImage(\r\n      canvasCopy,\r\n      0,\r\n      0,\r\n      canvasCopy.width,\r\n      canvasCopy.height,\r\n      0,\r\n      0,\r\n      this.drawto.width,\r\n      this.drawto.height\r\n    );\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * draw to canvas from image source and resize\r\n   *\r\n   */\r\n  draw() {\r\n    //draw image to canvas\r\n    this.drawto.width = this.drawfrom.width;\r\n    this.drawto.height = this.drawfrom.height;\r\n    //draw\r\n    this.ctx.drawImage(this.drawfrom, 0, 0);\r\n    //resize is always done\r\n    this.resizeImage();\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Save image from canvas\r\n   */\r\n\r\n  saveImage() {\r\n    const link = document.createElement(\"a\");\r\n    link.download = \"pxArt.png\";\r\n    link.href = this.drawto\r\n      .toDataURL(\"image/png\")\r\n      .replace(\"image/png\", \"image/octet-stream\");\r\n    document.querySelector(\"body\").appendChild(link);\r\n    link.click();\r\n    document.querySelector(\"body\").removeChild(link);\r\n  }\r\n\r\n  //end class\r\n}\r\n\r\nmodule.exports = {\r\n  pixelit: pixelit\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkconvert_to_pixel_art\"] = self[\"webpackChunkconvert_to_pixel_art\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(3633); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createElementVNode","class","_createElementBlock","type","accept","onChange","_ctx","onClick","e","target","value","uploadedImages","webkitdirectory","multiple","$event","_Fragment","_renderList","index","key","src","isConvert","_hoisted_4","_toDisplayString","imgNames","defineComponent","name","setup","CANVAS_CLASS_NAME","IMG_CLASS_NAME","appState","reactive","onFileChange","isMultiple","files","dataTransfer","createImage","arrFiles","Object","entries","map","v","res","forEach","file","reader","FileReader","onload","result","readAsDataURL","remove","canvasDoms","document","querySelectorAll","canvasDom","ctx","getContext","clearRect","width","height","convertToPixelArt","imgDoms","imgDom","px","pixelit","to","from","scale","draw","pixelate","convertPalette","style","__exports__","render","createApp","App","mount","constructor","config","this","drawto","getElementById","drawfrom","hideFromImg","palette","maxHeight","maxWidth","endColorStats","visibility","position","top","left","setFromImgSource","setDrawFrom","elem","setDrawTo","setPalette","arr","setMaxWidth","setMaxHeight","setScale","getPalette","colorSim","rgbColor","compareColor","i","max","d","length","Math","sqrt","similarColor","actualColor","nextColor","selectedColor","currentSim","color","naturalWidth","naturalHeight","scaledW","scaledH","tempCanvas","createElement","tempContext","drawImage","body","appendChild","mozImageSmoothingEnabled","webkitImageSmoothingEnabled","imageSmoothingEnabled","finalWidth","parseInt","finalHeight","convertGrayscale","w","h","imgPixels","getImageData","y","x","avg","data","putImageData","finalcolor","resizeImage","canvasCopy","copyContext","ratio","saveImage","link","download","href","toDataURL","replace","querySelector","click","removeChild","module","exports","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","keys","every","splice","r","n","getter","__esModule","a","definition","o","defineProperty","enumerable","get","g","globalThis","Function","window","obj","prop","prototype","hasOwnProperty","call","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","id","chunkLoadingGlobal","self","bind","push","__webpack_exports__"],"sourceRoot":""}